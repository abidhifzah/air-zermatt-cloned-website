function accordeon() {
    $("div.accordeon").length && ($("div.accordeon").addClass("start_accordeon"), window.title_label_closed = "Accordion with hidden content on the theme: ", window.title_label_open = "Accordion with visible content on the theme: ", "de" == phpcomasy_lang && (window.title_label_closed = "Akkordeon mit verstecktem Inhalt zum Thema: ", window.title_label_open = "Akkordeon mit sichtbarem Inhalt zum Thema: "), "fr" == phpcomasy_lang && (window.title_label_closed = "Accordéon avec contenu caché sur le thème: ", window.title_label_open = "Accordéon à contenu visible sur le thème: "), "it" == phpcomasy_lang && (window.title_label_closed = "Fisarmonica con contenuto nascosto sul tema: ", window.title_label_open = "Fisarmonica con contenuto visibile sul tema: "), $("div.start_accordeon").each(function() {
        $(this).addBack().wrapAll('<div class="accordeon_wrap"></div>')
    }), $(".accordeon_wrap .accordeon_title_selector").each(function() {
        var t = $(this).text();
        $(this).attr("aria-label", window.title_label_closed + t), $(this).nextUntil(".accordeon_title_selector").wrapAll('<div class="accordeon_content" aria-role="region"></div>'), $(this).nextUntil(".accordeon_title_selector").addBack().wrapAll('<div class="accordeon_entry"></div>'), $(this).addBack().wrap('<div class="accordeon_title"></div>')
    }), $(".accordeon_entry .accordeon_title").click(function() {
        var t = $(this).find(".accordeon_title_selector"),
            e = t.text(),
            n = $(this).closest(".accordeon_entry"),
            a = n.find(".accordeon_content"),
            i = $(".accordeon_entry"),
            o = $(".accordeon_content");
        toggleAccordeonEntry(t, e, n, a, i, o)
    }), $(".accordeon_entry .accordeon_title").keydown(function(t) {
        var e = t.keyCode ? t.keyCode : t.which;
        if ("13" == e) {
            var n = $(this).find(".accordeon_title_selector"),
                a = n.text(),
                i = $(this).closest(".accordeon_entry"),
                o = i.find(".accordeon_content"),
                r = $(".accordeon_entry"),
                c = $(".accordeon_content");
            toggleAccordeonEntry(n, a, i, o, r, c)
        }
    }))
}

function toggleAccordeonEntry(t, e, n, a, i, o) {
    n.hasClass("visible_detail") ? (n.removeClass("visible_detail"), a.slideUp(), a.attr("aria-hidden", !0), t.attr("aria-expanded", !1).attr("aria-label", window.title_label_closed + e)) : (o.slideUp(), i.removeClass("visible_detail"), n.addClass("visible_detail"), a.slideDown(), a.attr("aria-hidden", !1), t.attr("aria-expanded", !0).attr("aria-label", window.title_label_open + e))
}

function initFancyboxScripts() {
    "function" == typeof jQuery().fancybox && ($.fancybox.defaults.buttons = ["download", "close"], $.fancybox.defaults.btnTpl.download = '<a download data-fancybox-download-comasy style="display: none" class="fancybox-button fancybox-button--download" title="{{DOWNLOAD}}"><svg viewBox="0 0 40 40"><path d="M20,23 L20,8 L20,23 L13,16 L20,23 L27,16 L20,23 M26,28 L13,28 L27,28 L14,28" /></svg></a>', $.fancybox.defaults.afterShow = function(t, e) {
        void 0 !== e.opts.downloadLink ? (t.$refs.container.find("[data-fancybox-download-comasy]").attr("href", e.opts.downloadLink), t.$refs.container.find("[data-fancybox-download-comasy]").show()) : t.$refs.container.find("[data-fancybox-download-comasy]").hide()
    }, $(".fancybox, .fancybox *, .fancybox_modal, .popup, .fancybox_popup, .fancybox_iframe").unbind("click.fb-start"), $(".fancybox").fancybox(), $(".fancybox_modal").fancybox({
        modal: !0
    }), $(".popup, .fancybox_popup").fancybox(), $(".fancybox_iframe").each(function() {
        $(this).attr("data-src", $(this).attr("href")), $(this).attr("data-type", "iframe")
    }).fancybox())
}

function initTooltipster() {
    if ("function" == typeof jQuery().tooltipster) {
        $(".tooltip").tooltipster({
            contentAsHTML: !0,
            maxWidth: 380
        }), $(".tooltip").tooltipster().focus(function() {
            $(this).tooltipster("show")
        }), $(".tooltip").tooltipster().focusout(function() {
            $(this).tooltipster("hide")
        }), $(".icon_help").tooltipster({
            contentAsHTML: !0,
            maxWidth: 380,
            position: "right"
        });
        var t = $(".management_controls .tooltip, .management_container .tooltip, .management_container .icon_help, .management .icon_help, .manage_navigation .tooltip, .tooltip.management_tooltip");
        t.tooltipster("option", "theme", "tooltipster-default tooltipster-management")
    }
}

function ask(t, e) {
    1 == confirm(t) && (window.location.href = e)
}

function confirmation(t, e) {
    ask(t, e)
}

function checkDate(t) {
    for (month = $("#" + t + "_month").val(), year = $("#" + t + "_year").val(), daysCount = new Date(year, month, 0).getDate(), ctr = 0, $("select#" + t + "_day option").each(function(t) {
            $(this).val() > daysCount && $(this).remove(), ctr++
        }), i = ctr + 1; i <= daysCount; i++) $("#" + t + "_day").html($("#" + t + "_day").html() + '<option value="' + i + '">' + i + "</option>")
}

function mergeDate(t) {
    month = $("#" + t + "_month").options[$("#" + t + "_month").selectedIndex].value, year = $("#" + t + "_year").options[$("#" + t + "_year").selectedIndex].value, day = $("#" + t + "_day").options[$("#" + t + "_day").selectedIndex].value, $(t + "_fulldate").value = day + "." + month + "." + year
}

function liveSearch(t, e, n) {
    if (a = {}, a.searchtext = $(t).val(), a.action = "ajax_live_search", "object" == typeof n) var a = $.extend({}, a, n);
    window.liveSearchRequest && 4 != window.liveSearchRequest.readyState && window.liveSearchRequest.abort(), window.liveSearchRequest = $.ajax({
        url: "index.php",
        type: "POST",
        data: a,
        success: function(t) {
            e && "function" == typeof e ? e(t) : (t.length > 0 ? $(".live_search_results").show("fade").html(t) : $(".live_search_results").hide("fade"), $(".live_search_results .search_item_wrap").click(function() {
                window.location = $(this).find("a.search_item").attr("href")
            }))
        }
    })
}

function initAJAXlinks() {
    $("a.ajax_call").click(function(t) {
        t.preventDefault(), $.ajax({
            type: "POST",
            url: $(this).data("url")
        })
    })
}

function tableWrap(t) {
    $(t).wrap('<div class="table_wrap_container"><div class="table_wrap"></div></div>'), $(".table_wrap_container").append('<span class="table_scroll_indicator"><i class="fa fa-exchange"></i></span>'), $(".table_scroll_indicator").click(function() {
        tableWrap = $(this).prev(".table_wrap"), tableWrapScroll = tableWrap.scrollLeft() > 0 ? 0 : tableWrap.find("> table").outerWidth(), tableWrap.animate({
            scrollLeft: tableWrapScroll
        }, 600)
    })
}

function tableIndicatorResizer() {
    $(".table_wrap_container").each(function() {
        var t = $(this).innerWidth(),
            e = $(this).find("table").innerWidth();
        e <= t ? $(this).removeClass("visible_indicator") : $(this).addClass("visible_indicator")
    })
}

function sameHeight(t) {
    if ($(t).length) {
        var e = 0;
        $(t).each(function() {
            $(this).css("min-height", "0"), "0px" !== $(this).css("min-height") && $(this).css("min-height", "0")
        }), $(t).each(function(t, n) {
            var a = $(n).outerHeight(!0);
            a > e && (e = a + 1)
        }), $(t).each(function() {
            $(this).css("min-height", e + "px")
        })
    }
}

function initSelect2(t, e) {
    void 0 === e && (e = {
        minimumResultsForSearch: 10
    }), selectElements = $(t), selectElements.length && selectElements.each(function() {
        resultsName = "" != $(this).attr("id") && void 0 !== $(this).attr("id") ? $(this).attr("id") : $(this).attr("name"), select2 = $(this).addClass("select2_field").select2(e), select2.data("select2").$container.addClass("chosen-container chosen-container-single"), select2.data("select2").$dropdown.addClass("chosen-single"), select2.data("select2").$selection.addClass("chosen-single"), select2.data("select2").$results.addClass(resultsName + "_results")
    })
}

function initSelect2Filter(t) {
    selectElements = $(t), selectElements.length && selectElements.each(function() {
        resultsName = "" != $(this).attr("id") && void 0 !== $(this).attr("id") ? $(this).attr("id") : $(this).attr("name");
        const t = (t, e) => {
                if (!t.id) return t.text;
                if (t.text.indexOf(": ") > -1) {
                    if (state_text_split = t.text.split(": "), "object" == typeof state_text_split) {
                        let e = $(`<div>${state_text_split[0]}<div class="property_entry_count">${state_text_split[1]}</div></div>`);
                        return e.css(t.style || {}), Object.keys(t).forEach(n => {
                            ["id", "text", "style"].includes(n) || e.attr(n, t[n])
                        }), e.attr("title", e.text()), e
                    }
                    return t.text
                }
                return t.text
            },
            e = (t, e) => t.id && t.text.indexOf(": ") > -1 ? (state_text_split = t.text.split(": "), "object" == typeof state_text_split ? state_text_split[0] : t.text) : t.text;
        let n = {
            minimumResultsForSearch: 10,
            templateResult: t,
            templateSelection: e
        };
        select2 = $(this).addClass("select2_field").select2(n), select2.data("select2").$container.addClass("chosen-container chosen-container-single"), select2.data("select2").$dropdown.addClass("chosen-single"), select2.data("select2").$selection.addClass("chosen-single"), select2.data("select2").$results.addClass(resultsName + "_results")
    })
}

function initBXSliderEvents() {
    "function" == typeof jQuery().bxSlider && $(document).keyup(function(t) {
        var e = 37 == t.keyCode ? "left" : 39 == t.keyCode ? "right" : "none";
        $(".bx-viewport:visible").length > 0 && "none" != e && $(".bx-viewport:visible").children().each(function() {
            if (!$(this).attr("data-disable-keyup")) {
                var t = $(this).data("bxSlider");
                void 0 !== t && t["left" == e ? "goToPrevSlide" : "goToNextSlide"]()
            }
        })
    })
}

function initPrivacyBanner() {
    if ($("#privacy_banner_wrap").length > 0) {
        var t = $("#privacy_banner_wrap").attr("data-privacy-page-id");
        t > 0 && $.ajax("index.php?action=ajax_get_privacy_banner&privacy_page_id=" + t, {
            type: "GET",
            success: function(t) {
                "" != t && ($("#privacy_banner_wrap").html(t), $("#privacy_banner_wrap a#privacy_button").length > 0 && $("a#privacy_button").attr("tab-index", 0), $("#privacy_banner_wrap #privacy_banner").length > 0 && $("#privacy_banner_wrap #privacy_banner a#privacy_button").click(function() {
                    $.cookie("indual_cms_privacy_statement", "accepted", {
                        path: "/",
                        expires: 365
                    }), $("#privacy_banner_wrap #privacy_banner").remove()
                }))
            }
        })
    }
    initPrivacyBannerMargin()
}

function initPrivacyBannerMargin() {
    window.setTimeout(function() {
        if ($("#privacy_banner").length) {
            var t = $("#privacy_banner").css("max-width");
            if ("100%" == t) {
                var e = $("#privacy_banner").outerHeight(!0);
                $(".page").css("margin-bottom", e + "px")
            } else $(".page").css("margin-bottom", "0")
        } else $(".page").css("margin-bottom", "0")
    }, 600)
}

function initDocument() {
    "ontouchstart" in document.documentElement && $("body").addClass("touch");
    let t = getClientBrowser();
    "" != t && $("body").addClass("browser_" + t), setScrollingClass(), $(window).scroll(function() {
        setScrollingClass()
    }), $(".navigation > li.current, .rwd_navigation > li.current").each(function() {
        $(this).attr("aria-current", !0)
    }), $('input[type="file"]').length && $('input[type="file"]').each(function() {
        var t = $(this),
            e = $(t).next("label"),
            n = $(e).html();
        $(t).on("change", function(t) {
            var a = "";
            if (this.files && this.files.length > 1) a = ($(this).attr("data-multiple-caption") || "").replace("{count}", this.files.length);
            else if (t.target.value) a = t.target.value.split("\\").pop();
            "" != $(a).val ? $(e).find("span").html(a) : $(e).html(n)
        })
    }), void 0 !== jQuery.ui && ($.datepicker.setDefaults($.datepicker.regional[phpcomasy_lang]), $(".datepicker").each(function() {
        var t = {
                dateFormat: "dd.mm.yy",
                changeMonth: !0,
                changeYear: !0,
                yearRange: "-100:+10"
            },
            e = $(this).data("datepicker");
        void 0 === e && (e = ""), jQuery.extend(t, e), $(this).datepicker(t)
    }))
}

function initResponsiveToggle() {
    $(".responsive_navigation_toggle").length > 0 && $(".responsive_navigation_toggle").click(function() {
        $("body").toggleClass("navi_open")
    })
}

function setScrollingClass() {
    $(window).scrollTop() > 10 ? $("body").addClass("is_scrolled") : $("body").removeClass("is_scrolled")
}

function initCronoTabs(t, e, n, a = 0) {
    new Array;
    if ($("#" + t)) {
        $("." + e).hide(), $("#" + t).wrap('<div id="' + t + '_list" class="crono_tab_list"></div>'), $("#" + t + "_list").append('<div class="cf"></div>');
        var i = 0;
        $("#" + t + " li a").each(function(n) {
            var o = $(this).attr("href").substr($(this).attr("href").indexOf("#") + 1);
            $(this).parent("li").attr("data-tabindex", n), i == a && ($("#" + o) && $("#" + o).show(), $(this).parents("li").first().addClass("current")), $("#" + o) ? ($("#" + o).attr("data-tabindex", n), $("#" + o).addClass("crono_tab"), $(this).click(function(a) {
                a.preventDefault(), showCronoTab(n, t, e)
            }), $("#" + o).has("input").length > 0 && 0 == $("#" + o).has(".wysiwyg_editor").length && ($("#" + o + " input, #" + o + " textarea").first().on("keydown", function(n) {
                var a = n.which || n.keyCode;
                switch (a) {
                    default: break;
                    case 9:
                            1 == n.shiftKey && ($("#" + t + " li:first-child").hasClass("current") || (showPrevCronoTab(t, e), n.preventDefault()))
                }
            }), $("#" + o + " input, #" + o + " textarea").last().on("keydown", function(n) {
                var a = n.which || n.keyCode;
                switch (a) {
                    default: break;
                    case 9:
                            0 == n.shiftKey && ($("#" + t + " li:last-child").hasClass("current") || (showNextCronoTab(t, e), n.preventDefault()))
                }
            })), i++) : $(this).hide()
        }), i < 2 && 1 != n && $(t + "_list").hide()
    }
}

function showCronoTab(t, e, n) {
    $("#" + e).has("li[data-tabindex=" + t + "]").length && (removeCurrentCronoTab(e, n), $("#" + e + " li[data-tabindex=" + t + "]").addClass("current"), $("div." + n + "[data-tabindex=" + t + "]").addClass("current").show())
}

function showNextCronoTab(t, e) {
    currentIndex = $("#" + t + " li.current").attr("data-tabindex"), showCronoTab(parseInt(currentIndex) + 1, t, e), $("." + e + ".current input, ." + e + ".current textarea").first().focus()
}

function showPrevCronoTab(t, e) {
    currentIndex = $("#" + t + " li.current").attr("data-tabindex"), showCronoTab(parseInt(currentIndex) - 1, t, e), $("." + e + ".current input, ." + e + ".current textarea").last().focus()
}

function removeCurrentCronoTab(t, e) {
    $("#" + t + " li.current").removeClass("current"), $("." + e).removeClass("current").hide()
}

function getClientBrowser() {
    let t = navigator.userAgent,
        e = "";
    return t.match(/opr\//i) ? e = "opera" : t.match(/edg/i) ? e = "edge" : t.match(/chrome|chromium|crios/i) ? e = "chrome" : t.match(/firefox|fxios/i) ? e = "firefox" : t.match(/safari/i) ? e = "safari" : t.match(/trident/i) ? e = "internet_explorer" : t.match(/ucbrowser/i) ? e = "uc" : t.match(/samsungbrowser/i) && (e = "samsung"), e
}(function(t) {
    "function" == typeof define && define.amd ? define(["jquery"], t) : "object" == typeof exports ? t(require("jquery")) : t(jQuery)
})(function(t) {
    function e(t) {
        return c.raw ? t : encodeURIComponent(t)
    }

    function n(t) {
        return c.raw ? t : decodeURIComponent(t)
    }

    function a(t) {
        return e(c.json ? JSON.stringify(t) : String(t))
    }

    function i(t) {
        0 === t.indexOf('"') && (t = t.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, "\\"));
        try {
            return t = decodeURIComponent(t.replace(r, " ")), c.json ? JSON.parse(t) : t
        } catch (t) {}
    }

    function o(e, n) {
        var a = c.raw ? e : i(e);
        return t.isFunction(n) ? n(a) : a
    }
    var r = /\+/g,
        c = t.cookie = function(i, r, s) {
            if (arguments.length > 1 && !t.isFunction(r)) {
                if (s = t.extend({}, c.defaults, s), "number" == typeof s.expires) {
                    var l = s.expires,
                        d = s.expires = new Date;
                    d.setTime(+d + 864e5 * l)
                }
                return document.cookie = [e(i), "=", a(r), s.expires ? "; expires=" + s.expires.toUTCString() : "", s.path ? "; path=" + s.path : "", s.domain ? "; domain=" + s.domain : "", s.secure ? "; secure" : ""].join("")
            }
            for (var h = i ? void 0 : {}, u = document.cookie ? document.cookie.split("; ") : [], p = 0, f = u.length; p < f; p++) {
                var $ = u[p].split("="),
                    _ = n($.shift()),
                    v = $.join("=");
                if (i && i === _) {
                    h = o(v, r);
                    break
                }
                i || void 0 === (v = o(v)) || (h[_] = v)
            }
            return h
        };
    c.defaults = {}, t.removeCookie = function(e, n) {
        return void 0 !== t.cookie(e) && (t.cookie(e, "", t.extend({}, n, {
            expires: -1
        })), !t.cookie(e))
    }
});
var phpcomasy_lang = "de";
$(document).ready(function() {
    initResponsiveToggle()
}), $(window).on("ready phpcomasy_ready load", function() {
    void 0 !== $("body").attr("lang") && (phpcomasy_lang = $("body").attr("lang").toLowerCase()), initFancyboxScripts(), initTooltipster(), initSelect2(".chosen select, .mailform_element select, .select2 select, select.select2, select.chosen"), initSelect2Filter(".select2_filter"), initAJAXlinks(), initBXSliderEvents(), initPrivacyBanner(), tableIndicatorResizer(), accordeon(), initDocument()
}), $(window).on("resize", function() {
    initPrivacyBannerMargin(), tableIndicatorResizer()
});